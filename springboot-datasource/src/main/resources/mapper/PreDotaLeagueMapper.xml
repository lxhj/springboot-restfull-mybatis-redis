<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.itcarrier.springboot.dao.PreDotaLeagueDao">
  <resultMap id="BaseResultMap" type="com.solo.springcloud.commons.entities.PreDotaLeague">
    <!--@mbg.generated-->
    <!--@Table pre_dota_league-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="desc" jdbcType="LONGVARCHAR" property="desc" />
    <result column="start_time" jdbcType="BIGINT" property="startTime" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, `desc`, start_time, create_time, create_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from pre_dota_league
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from pre_dota_league
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.solo.springcloud.commons.entities.PreDotaLeague" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into pre_dota_league (`name`, `desc`, start_time,
      create_time, create_user_id)
    values (#{name,jdbcType=VARCHAR}, #{desc,jdbcType=LONGVARCHAR}, #{startTime,jdbcType=BIGINT},
      #{createTime,jdbcType=BIGINT}, #{createUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.solo.springcloud.commons.entities.PreDotaLeague" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into pre_dota_league
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=LONGVARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.solo.springcloud.commons.entities.PreDotaLeague">
    <!--@mbg.generated-->
    update pre_dota_league
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=LONGVARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.solo.springcloud.commons.entities.PreDotaLeague">
    <!--@mbg.generated-->
    update pre_dota_league
    set `name` = #{name,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=LONGVARCHAR},
      start_time = #{startTime,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT},
      create_user_id = #{createUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
